import { getStore } from '@netlify/blobs';

export default async (req) => {
  if (req.method !== 'POST') return new Response('Method Not Allowed', { status: 405 });
  try {
    const { token } = await req.json();
    if (!token || token.length < 6) return new Response(JSON.stringify({ error: 'token inválido' }), { status: 400 });
    const store = getStore('tokens');
    const key = `t:${token}`;
    const used = await store.get(key);
    if (used) return new Response(JSON.stringify({ error: 'used' }), { status: 410, headers:{'Content-Type':'application/json'} });
    await store.set(key, JSON.stringify({ usedAt: new Date().toISOString() }), { ttl: 60*60*24*7 }); // 7 días
    return new Response(JSON.stringify({ ok: true }), { status: 200, headers:{'Content-Type':'application/json'} });
  } catch {
    return new Response(JSON.stringify({ error: 'server' }), { status: 500, headers:{'Content-Type':'application/json'} });
  }
};
